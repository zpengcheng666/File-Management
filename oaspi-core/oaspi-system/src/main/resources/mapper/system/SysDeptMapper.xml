<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oaspi.system.mapper.SysDeptMapper">

	<resultMap type="SysDept" id="SysDeptResult">
		<id     property="deptId"     column="dept_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="deptName"   column="dept_name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="leader"     column="leader"      />
		<result property="phone"      column="phone"       />
		<result property="orgCode"    column="org_code"       />
		<result property="email"      column="email"       />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
		<result property="remark"	  column="remark" />
		<result property="tenantId"	  column="tenant_id" />
		<result property="name"	  column="name" />
		<result property="usercount"	  column="usercount" />
		<result property="parentcount"	  column="parentcount" />
		<result property="type"	  column="type" />

	</resultMap>
	
	<sql id="selectDeptVo">
        select d.dept_id, d.tenant_id, d.org_code, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag, d.create_by, d.create_time, d.remark
        from doc_dept d
    </sql>
	<select id="selectCorpList" parameterType="SysDept" resultMap="SysDeptResult">
		<include refid="selectDeptVo"/>
		where d.del_flag = '0' and d.parent_id = '0'
		<if test="deptId != null and deptId != 0">
			AND dept_id = #{deptId}
		</if>
		<if test="deptName != null and deptName != ''">
			AND dept_name like concat('%', #{deptName}, '%')
		</if>
		<if test="orgCode != null and orgCode != ''">
			AND org_code like concat('%', #{orgCode}, '%')
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<if test="tenantId != null and tenantId != 0">
			AND tenant_id = #{tenantId}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by d.parent_id, d.order_num
	</select>

	<select id="selectDeptList" parameterType="SysDept" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where d.del_flag = '0'
		<if test="deptId != null and deptId != 0">
			AND dept_id = #{deptId}
		</if>
        <if test="parentId != null and parentId != 0">
			AND parent_id = #{parentId}
		</if>
		<if test="deptName != null and deptName != ''">
			AND dept_name like concat('%', #{deptName}, '%')
		</if>
		<if test="orgCode != null and orgCode != ''">
			AND org_code like concat('%', #{orgCode}, '%')
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<if test="tenantId != null and tenantId != 0">
			AND tenant_id = #{tenantId}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by d.parent_id, d.order_num
    </select>

	<select id="selDeptList" parameterType="SysDept" resultMap="SysDeptResult">
		select dept_id , dept_name from doc_dept where type = '1' and del_flag = '0'
	</select>

	<select id="selDept" parameterType="SysDept" resultMap="SysDeptResult">
		select a.dept_id,a.dept_name,a.leader,case when c.usercount is null then 0 else c.usercount end as usercount from doc_dept a
		left join (select dept_id ,count(user_id) as usercount from sys_user GROUP BY dept_id) c on c.dept_id = a.dept_id
		where a.parent_id = #{deptId} and a.type ='2'
	</select>


	<select id="list" parameterType="SysDept" resultMap="SysDeptResult">
		select a.dept_name,b.dept_name,a.status,case when c.usercount is null then 0 else c.usercount end as usercount,a.leader,a.create_time,
		case when e.parentcount is null then 0 else e.parentcount end as parentcount,a.phone,a.email,a.remark
		from doc_dept a
		left join doc_dept b on a.parent_id = b.dept_id
		left join (select dept_id ,count(user_id) as usercount from sys_user GROUP BY dept_id) c on c.dept_id = a.dept_id
		left join (select parent_id,count(parent_id) as parentcount from doc_dept where type = '2' GROUP BY parent_id) e on a.dept_id = e.parent_id
		where a.type = '1' d.del_flag = '0'
		<if test="status != null and status != '' "> AND a.status = #{status} </if>
		<if test="dept_name != null and dept_name != 0"> AND a.dept_name = concat('%', #{dept_name}, '%') </if>
	</select>
    
    <select id="selectDeptListByRoleId" resultType="Long">
		select d.dept_id
		from doc_dept d
            left join sys_role_dept rd on d.dept_id = rd.dept_id
        where rd.role_id = #{roleId}
            <if test="deptCheckStrictly">
              and d.dept_id not in (select d.parent_id from doc_dept d inner join sys_role_dept rd on d.dept_id = rd.dept_id and rd.role_id = #{roleId})
            </if>
		order by d.parent_id, d.order_num
	</select>
    
    <select id="selectDeptById" parameterType="Long" resultMap="SysDeptResult">
		select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status, d.org_code,d.remark,d.tenant_id,
			(select dept_name from doc_dept where dept_id = d.parent_id) parent_name
		from doc_dept d
		where d.dept_id = #{deptId}
	</select>
    
    <select id="checkDeptExistUser" parameterType="Long" resultType="int">
		select count(1) from sys_user where dept_id = #{deptId} and del_flag = '0'
	</select>
	
	<select id="hasChildByDeptId" parameterType="Long" resultType="int">
		select count(1) from doc_dept
		where del_flag = '0' and parent_id = #{deptId} limit 1
	</select>
	
	<select id="selectChildrenDeptById" parameterType="Long" resultMap="SysDeptResult">
		select * from doc_dept where find_in_set(#{deptId}, ancestors)
	</select>
	
	<select id="selectNormalChildrenDeptById" parameterType="Long" resultType="int">
		select count(*) from doc_dept where status = 0 and del_flag = '0' and find_in_set(#{deptId}, ancestors)
	</select>
	
	<select id="checkDeptNameUnique" resultMap="SysDeptResult">
	    <include refid="selectDeptVo"/>
		where dept_name=#{deptName} and parent_id = #{parentId} and del_flag = '0' limit 1
	</select>
    
    <insert id="insertDept" parameterType="SysDept" useGeneratedKeys="true" keyProperty="deptId">
 		insert into doc_dept(
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="parentId != null and parentId != 0">parent_id,</if>
 			<if test="deptName != null and deptName != ''">dept_name,</if>
			<if test="orgCode != null and orgCode != ''">org_code,</if>
			<if test="ancestors != null and ancestors != ''">ancestors,</if>
 			<if test="orderNum != null">order_num,</if>
 			<if test="leader != null and leader != ''">leader,</if>
 			<if test="phone != null and phone != ''">phone,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="status != null">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
			<if test="remark != null and remark != ''">remark,</if>
			<if test="tenantId != null and tenantId != ''">tenant_id,</if>
			<if test="type != null and type != ''">type,</if>
		create_time
 		)values(
 			<if test="deptId != null and deptId != 0">#{deptId},</if>
 			<if test="parentId != null and parentId != 0">#{parentId},</if>
 			<if test="deptName != null and deptName != ''">#{deptName},</if>
			<if test="orgCode != null and orgCode != ''">#{orgCode},</if>
			<if test="ancestors != null and ancestors != ''">#{ancestors},</if>
 			<if test="orderNum != null">#{orderNum},</if>
 			<if test="leader != null and leader != ''">#{leader},</if>
 			<if test="phone != null and phone != ''">#{phone},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="status != null">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
			<if test="remark != null and remark != ''">#{remark},</if>
			<if test="tenantId != null and tenantId != ''">#{tenantId},</if>
			<if test="type != null type tenantId != ''">#{type},</if>
		sysdate()
 		)
	</insert>
	
	<update id="updateDept" parameterType="SysDept">
 		update doc_dept
 		<set>
 			<if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
 			<if test="deptName != null and deptName != ''">dept_name = #{deptName},</if>
			<if test="orgCode != null and orgCode != ''">org_code = #{orgCode},</if>

			<if test="tenantId != null and tenantId != ''">tenant_id = #{tenantId},</if>

			<if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
 			<if test="orderNum != null">order_num = #{orderNum},</if>
 			<if test="leader != null">leader = #{leader},</if>
 			<if test="phone != null">phone = #{phone},</if>
 			<if test="email != null">email = #{email},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
			<if test="remark != null and remark != ''">remark = #{remark},</if>
			<if test="type != null and type != ''">type = #{type},</if>

			update_time = sysdate()
 		</set>
 		where dept_id = #{deptId}
	</update>
	
	<update id="updateDeptChildren" parameterType="java.util.List">
	    update doc_dept set ancestors =
	    <foreach collection="depts" item="item" index="index"
	        separator=" " open="case dept_id" close="end">
	        when #{item.deptId} then #{item.ancestors}
	    </foreach>
	    where dept_id in
	    <foreach collection="depts" item="item" index="index"
	        separator="," open="(" close=")">
	        #{item.deptId}
	    </foreach>
	</update>
	 
	<update id="updateDeptStatusNormal" parameterType="Long">
 	    update doc_dept set status = '0' where dept_id in
 	    <foreach collection="array" item="deptId" open="(" separator="," close=")">
        	#{deptId}
        </foreach>
	</update>
	
	<delete id="deleteDeptById" parameterType="Long">
		update doc_dept set del_flag = '2' where dept_id = #{deptId}
	</delete>

	<update id="bindDept" parameterType="SysDept">
		update doc_dept set parent_id = #{parentId},update_time = #{updateTime},update_by = #{updateBy}
		where dept_id = #{deptId}
	</update>
</mapper> 